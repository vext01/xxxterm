.\"	$xxxterm$
.\"
.\" Copyright (c) 2010, 2011 Marco Peereboom <marco@peereboom.us>
.\" Copyright (c) 2011 Jason McIntyre <jmc@openbsd.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: October 14 2011 $
.Dt XXXTERM 1
.Os
.Sh NAME
.Nm xxxterm
.Nd lightweight web browser
.Sh SYNOPSIS
.Nm xxxterm
.Bk -words
.Op Fl nSTtV
.Op Fl f Ar file
.Op Fl s Ar session_name
.Op Ar url ...
.Ek
.Sh DESCRIPTION
.Nm
is a minimalistic web browser that tries to stay out of the way so that
valuable screen real estate can be used for much more important stuff.
It has sane defaults and does not require one to learn a language to do any
configuration.
It was written by hackers for hackers
and it strives to be small, compact, and fast.
.Pp
.Nm
is very simple in its use.
Most actions are initiated via key or mouse bindings.
Key bindings are based on those of the
.Xr vi 1
text editor,
giving web browsing a similar feel to navigating a text document.
The
.Sx KEY BINDINGS
section below documents the various defaults and possible customizations.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl f Ar file
Specify an alternative configuration file.
.It Fl n
Open a new tab in a running
.Nm
for each specified URL.
This option requires
.Cm enable_socket
to be enabled.
.It Fl e Ar command
Execute arbitrary command (see the
.Sx COMMAND MODE
section below) in a running
.Nm
instance. This option requires
.Cm enable_socket
to be enabled. Example run: xxxterm -e "tabnew openbsd.org"; xxxterm -e
tabclose; xxxterm -e wq.
.It Fl S
Disable the toolbar.
.It Fl s Ar session_name
Open session that was saved with ":session save" command.
.It Fl T
Disable visualization of tabs.
.It Fl t
Disable tabs.
.It Fl V
Display version and exit.
.El
.Sh FAST STARTUP
The following notation is used throughout this page:
.Pp
.Bl -tag -width Ds -offset indent -compact
.It Cm C-
Control
.It Cm S-
Shift
.It Cm M1-
Meta 1 (sometimes marked Alt)
.It Cm M2-
Meta 2
.It Cm M3-
Meta 3
.It Cm M4-
Meta 4 (sometimes marked Windows)
.It Cm M5-
Meta 2
.It Cm MB1
Mouse button 1
.El
.Pp
To browse to a specific address,
either use the mouse to click on the address bar
or press
.Cm F6
to shift the keyboard focus to the address bar.
The address is then entered manually.
.Pp
The mouse can be used to navigate the page in the traditional manner,
or the keyboard can be used instead.
For example,
.Cm PageUp
and
.Cm PageDown
will scroll up and down the page.
.Pp
To follow a link,
either click on it or use the
.Cm f
key and have
.Nm
assign numbers to each link on the page;
entering that number on the keyboard will prompt
.Nm
to follow the link.
.Sh KEY BINDINGS
.Nm
provides many actions accessed via key or mouse bindings.
Most can be reprogrammed using a
.Cm keybinding
entry in the configuration file.
Each keyboard shortcut requires exactly one entry in the configuration file.
A shortcut can have multiple entries in the configuration file.
The format of the keybinding entry is as follows:
.Pp
.D1 keybinding = action,(!)keystroke(s)
.Pp
For example, "keybinding = tabnew,C-t" where
.Cm tabnew
is the action and
.Cm C-t
are
the keystrokes.
GTK has some default keybindings for manipulating text inside input
fields, such as the URI or search entry widget, for example
.Cm C-w
deletes a word. To override these defaults prefix your key with an
exclamation mark, like this: "keybinding = tabclose,!C-w".
The
.Cm clearall
key word is special and is meant to reset the key binding list to the GTK+
and WebKit defaults.
This keyword should be the first
.Cm keybinding
entry in the configuration file.
.Pp
Shift should be used sparingly since it gets in the way of non-USA keyboards.
See the accompanying configuration file for examples.
.Pp
The various bindings are documented below.
The relevant keybinding action is given afterwards, in parentheses.
.Ss Command mode
These commands are used to focus or unfocus input on the default input of a web
page.
.Pp
.Bl -tag -width Ds -offset indent -compact
.It Cm ESC
Go to command mode; unfocus current entry on web page.
.Pq Cm command_mode
.It Cm i
Go to insert mode; focus on default entry on web page.
.Pq Cm insert_mode
.El
.Ss Search Commands
These commands are used to search for text strings within a web page.
.Pp
.Bl -tag -width Ds -offset indent -compact
.It Cm /
Start a search
.Pq Cm search
.It Cm \&?
Start a backwards search
.Pq Cm searchb
.It Cm n
Next item matching search
.Pq Cm searchnext
.It Cm N
Previous item matching search
.Pq Cm searchprev
.El
.Ss Focus Commands
These commands are used to shift the focus of
.Nm
from one area to another.
.Pp
.Bl -tag -width Ds -offset indent -compact
.It Cm F6
Focus on address bar
.Pq Cm focusaddress
.It Cm F7
Focus on search entry
.Pq Cm focussearch
.El
.Ss Command Aliases
These commands allow the user to map specific actions to specific keys.
It can be useful when the
.Fl S
option is used.
.Pp
.Bl -tag -width Ds -offset indent -compact
.It Cm F1
Alias for ":help"
.It Cm F2
Alias for ":proxy toggle"
.It Cm F4
Alias for ":toplevel toggle"
.It Cm F9
Alias for ":open"
.Pq Cm promptopen
.It Cm F10
Alias for ":open current-uri"
.Pq Cm promptopencurrent
.It Cm F11
Alias for ":tabnew"
.Pq Cm prompttabnew
.It Cm F12
Alias for ":tabnew current-uri"
.Pq Cm prompttabnewcurrent
.El
.Ss Navigation Commands
These commands allow the user to navigate web pages and,
to some extent,
control the browser.
.Pp
.Bl -tag -width "Space, C-f, PageDownXXX" -offset indent -compact
.It Cm F5, C-r, C-l
Reload page
.Pq Cm reload
.It Cm Backspace, M-Left
Previous page
.Pq Cm goback
.It Cm S-BackSpace, M-Right
Forward page
.Pq Cm goforward
.It Cm j, Down
Next line on page
.Pq Cm scrolldown
.It Cm k, Up
Previous line on page
.Pq Cm scrollup
.It Cm G, End
Bottom of page
.Pq Cm scrollbottom
.It Cm gg, Home
Top of page
.Pq Cm scrolltop
.It Cm Space, C-f, PageDown
Page down
.Pq Cm scrollpagedown
.It Cm C-b, PageUp
Page up
.Pq Cm scrollpageup
.It Cm l, Right
Page right
.Pq Cm scrollright
.It Cm h, Left
Page left
.Pq Cm scrollleft
.It Cm $
Page far right
.Pq Cm scrollfarright
.It Cm 0
Page far left
.Pq Cm scrollfarleft
.It Cm M-f
Favorites
.Pq Cm fav
.It Cm M-j
Cookie jar
.Pq Cm cookiejar
.It Cm M-d
Download manager
.Pq Cm dl
.It Cm C-p
Print page
.Pq Cm print
.It Cm M-h
Global history
.Pq Cm history
.It Cm C-j
Toggle Java Script enabled for FQDN
.Pq Cm js
.It Cm C-s
Toggle source view
.Pq Cm togglesrc
.It Cm M-c
Toggle cookie enabled for FQDN
.Pq Cm cookie
.It Cm M-p
Toggle plugins enabled for FQDN
.Pq Cm plugin
.El
.Ss Tab Manipulation
.Nm
supports tabbed browsing.
That is, web pages may be opened in separate tabs,
allowing the user to quickly move from one page to another,
and back.
These commands then are used to create, destroy, and move between tabs.
.Pp
.Bl -tag -width "C-plus, C-equalXXX" -offset indent -compact
.It Cm C-MB1
Open new tab with the clicked link
.It Cm C-t
Create new tab with focus in URL entry
.Pq Cm tabnew
.It Cm C-T
Create new tab with focus in URL entry as the last tab in the browser
.Pq Cm 999tabnew
.It Cm C-w
Destroy current tab
.Pq Cm tabclose
.It Cm U
Undo close tab
.Pq Cm tabundoclose
.It Cm C-Left, C-PageUp
Go to the previous tab
.Pq Cm tabprevious
.It Cm C-Right, C-PageDown
Go to the next tab
.Pq Cm tabnext
.It Cm C-[1..9]
Jump to page
.Ar N
.Pq Cm tabnext [1..9]
.It Cm C-<
Jump to first page
.Pq Cm tabfirst
.It Cm C->
Jump to last page
.Pq Cm tablast
.It Cm C-minus
Zoom out by 4%
.Pq Cm focusout
.It Cm C-plus, C-equal
Zoom in by 4%
.Pq Cm focusin
.It Cm C-0
Set zoom level to 100%
.Pq Cm focusreset
.El
.Ss Yanking and pasting
These commands copy and paste text to and from the clipboard.
.Pp
.Bl -tag -width Ds -offset indent -compact
.It Cm p
Paste the contents of the clipboard into the address bar
.Pq Cm pasteuricur
.It Cm P
Paste the contents of the clipboard into a new tab
.Pq Cm pasteurinew
.It Cm y
Yank the current URL into the clipboard
.Pq Cm yankuri
.El
.Ss Hyperlink Following
This allows the user to follow hyperlinks
without using a mouse.
Enter the corresponding number to follow the link.
Alternatively one can type the name of the link and when there are no more
possibilities
.Nm
will follow the link.
.Pp
.Bl -tag -width Ds -offset indent -compact
.It Cm f, '.'
Highlight all links and prefix them with a number.
.Pq Cm hinting
.It Cm F, ','
Highlight all links and prefix them with a number but open in a new tab.
.Pq Cm hinting_newtab
.El
.Ss Exiting
Commands to exit the browser.
.Pp
.Bl -tag -width Ds -offset indent -compact
.It Cm C-q
Quit
.Pq Cm quitall
.El
.Ss Low-Contrast Color Scheme
These commands toggle the page style between the default CSS and a
low-contrast color scheme with light grey text on a dark grey background.
.Pp
.Bl -tag -width Ds -offset indent -compact
.It Cm s
Toggle the current tab's style.
.Pq Cm userstyle
.It Cm S
Toggle the global page style mode.
Will also affect new tabs.
.Pq Cm userstyle_global
.El
.Ss Insert-mode commands
The following commands are only available when editing an input-field
.Pp
.Bl -tag -width Ds -offset indent -compact
.It Cm C-i
Edit the contents of the currently active input-element in an external editor.
.Pq Cm editelement
.El
.Sh COMMAND MODE
Command mode works in a similar fashion to the
.Xr vi 1
editor;
it is entered by typing a colon and exited by typing Esc.
The commands and their descriptions are listed below.
.Bl -tag -width Ds -offset indent
.It Cm about , version
Show the "About" page.
.It Cm buffers , ls , tabs
Displays the currently open tabs and lets the user switch tab by typing
the tab number or using the mouse.
.It Cm ca
Display CA certificates.
.It Cm cert , cert show
Download and display certificates of domain on tab.
.It Cm cert save
Save certificate into a local store.
The next time the site is visited it is compared against the store.
If the certificate matches,
the address bar will be blue;
if it doesn't the bar will be red.
.It Cm cookie
The
.Cm cookie
command is used to manipulate the cookie whitelist.
Used by itself it expands to
.Cm cookie show all .
.It Cm cookiejar
Show cookie jar contents.
.It Cm XXX
Show cookie jar contents.
.It Cm cookie save, cookie save fqdn
Save the current fully qualified domain name (FQDN)
to the persistent whitelist.
For example,
the www.peereboom.us domain would result in saving .www.peereboom.us.
.It Cm cookie save domain
Save the top level domain name to the persistent whitelist.
For example,
the www.peereboom.us domain would result in saving .peereboom.us.
.Pp
This action enables cookies if it is currently disabled for this entry.
.It Cm cookie show all
Show all persistent and session entries in the cookie whitelist.
.It Cm cookie show persistent
Show all persistent entries in the cookie whitelist.
.It Cm cookie show session
Show all session entries in the cookie whitelist.
.It Cm cookie toggle domain
Toggle cookie support for the current top level domain.
.It Cm cookie toggle, cookie toggle fqdn
Toggle cookie support for the current FQDN.
.It Cm dl
Show download manager.
.It Cm encoding <encoding>
If
.Cm <encoding>
is set the tab's encoding will be set to
.Cm <encoding>
and
.Nm
reloads the tab.
If
.Cm <encoding>
is not set
.Nm
will display the current tab encoding.
.It Cm editsrc
Opens the source for the current tab in the editor specified by the
setting
.Cm external_editor
and then checks for changes to the file opened. If it is changed, the
page will be updated.
.It Cm editelement
If a text-element is currently active (<input> or <textarea>), it's
contents will be opened in the same fashion as for the command
.Cm editsrc
above
.It Cm fav
Show favorites.
.It Cm favadd
Add the current page to favorites.
.It Cm fullscreen , f
Toggle hiding tabs and url entry toolbar.
.It Cm h , hist , history
Show global history.
.It Cm help
Show help page.
.It Cm home
Go to home URL.
.It Cm js
The
.Cm js
command is used to manipulate the Java Script whitelist.
Used by itself it expands to
.Cm js show all .
.It Cm js save, save fqdn
Saves the FQDN to the persistent whitelist.
For example,
the www.peereboom.us domain would result in saving .www.peereboom.us.
.It Cm js save domain
Saves the top level domain name to the persistent whitelist.
For example,
the www.peereboom.us domain would result in saving .peereboom.us.
.Pp
This action enables Java Script if it is currently disabled for this entry.
.It Cm js show all
Shows all persistent and session entries in the JS whitelist.
.It Cm js show persistent
Shows all persistent entries in the JS whitelist.
.It Cm js show session
Shows all session entries in the JS whitelist.
.It Cm js toggle, js toggle fqdn
Toggle Java Script execution for the current FQDN.
.It Cm js toggle domain
Toggle Java Script execution for the current top level domain.
.It Cm loadimages
If auto_load_images is disabled, load all images for current site.
.It Cm open , op , o URL
Open URL.
.It Cm plugin
The
.Cm plugin
command is used to manipulate the plugin whitelist.
Used by itself it expands to
.Cm plugin show all .
.It Cm plugin save, save fqdn
Saves the FQDN to the persistent whitelist.
For example,
the www.peereboom.us domain would result in saving .www.peereboom.us.
.It Cm plugin save domain
Saves the top level domain name to the persistent whitelist.
For example,
the www.peereboom.us domain would result in saving .peereboom.us.
.Pp
This action enables plugins if they are currently disabled for this entry.
.It Cm plugin show all
Shows all persistent and session entries in the plugin whitelist.
.It Cm plugin show persistent
Shows all persistent entries in the plugin whitelist.
.It Cm plugin show session
Shows all session entries in the plugin whitelist.
.It Cm plugin toggle, plugin toggle fqdn
Toggle plugin execution for the current FQDN.
.It Cm plugin toggle domain
Toggle plugin execution for the current top level domain.
.It Cm print
Print page.
.It Cm proxy
The
.Cm proxy
command is used to manipulate the currently set proxy.
Used by itself it expands to
.Cm proxy show .
.It Cm proxy show
Displays the current
.Cm http_proxy
setting.
.It Cm proxy toggle
Enables or disables the proxy for
.Nm .
Note that
.Cm http_proxy
must be set before it can be toggled.
.It Cm qa , qall , quitall
Quit
.Nm .
.It Cm quit , q
Close current tab and quit
.Nm
if it is the last tab.
.It Cm restart
Restart
.Nm
and reload all current tabs.
.It Cm run_script [path_to_script]
Runs the script path_to_script with the current uri as the argument.
If path_to_script is not provided, the value of default_script is used
instead.
.It Cm script [filename]
Run an external JavaScript script file in the current tab context.
.It Cm session , Cm session show
Display the current session name.
By default the session name is main_session.
To create a new session use the
.Cm session save
command.
A session is defined as the lifetime of the browser application.
.It Cm session delete <session_name>
Delete session session_name from persistent storage.
If session_name is the current session then the session will revert to
main_session.
.It Cm session open <session_name>
Open session_name and close all currently open tabs.
Going forward this session is named session_name.
.It Cm session save <session_name>
Save current tabs to session_name session.
This will close the current session and going forward this session is named
session_name.
.It Cm set
The set command is used to inspect, clear or change runtime options.
There are 3 methods to use
.Cm :set .
When used by itself as
.Cm :set
the command displays all options as currently set.
.Pp
To set a value use
.Cm :set option=value .
For example,
.Cm :set http_proxy=http://127.0.0.1:8080 .
.Pp
To clear a value use
.Cm :set option= .
For example,
.Cm :set http_proxy= .
.Pp
Note, not all options can be set at runtime.
.It Cm stats
Show blocked cookie statistics.
These statistics vary based on settings and are not persistent.
.It Cm statustoggle , statust
Toggle status bar.
.It Cm stop
Stop loading the current web page.
.It Cm tabclose
Close current tab.
.It Cm tabhide
Hide tabs.
.It Cm tabnew , tabedit [URL]
Create new tab and optionally open provided URL.
.It Cm tabnext
Go to the next tab.
.It Cm tabprevious
Go to the previous tab.
.It Cm tabshow
Show tabs in GUI.
.It Cm toplevel , toplevel toggle
Toggle the top level domain name cookie and JS session whitelist.
This is to enable/disable short lived full site functionality without
permanently adding the top level domain to the persistent whitelist.
.It Cm urlhide , urlh
Hide url entry and tool bar.
.It Cm urlshow , urls
Show url entry and tool bar.
.It Cm w
Save open tabs to current session.
The tabs will be restored next time the session is opened.
See the session command for additional details.
.It Cm wq
Save open tabs and quit.
The tabs will be restored next time
.Nm
the session is opened.
See the session command for additional details.
.El
.Sh BUFFER COMMANDS
In addition to shortcuts and commands
.Nm
provides buffer commands. Buffer commands are short, multi character
vi-like commands, often requiring an argument. Partial buffer commands
are
displayed in the buffer command statusbar element (see
.Cm statusbar_elems ) .
Pressing Esc or switching to another tab cancels a partially entered
buffer command. In the following list
.Cm arg
denotes the argument a buffer command accepts. Buffer commands are
defined as extended regular experssions.
Note that if a character is used as a shortcut it will not be interpreted
as the beginning of a buffer command. This is the case with
.Cm 0 .
.Pp
.Bl -tag -width "['][a-zA-Z0-9]XXX" -offset indent -compact
.It Cm gg
go to the top of the page
.It Cm gG
go to the bottom of the page
.It Cm [0-9]+%
go to the
.Cm arg
percent of the page
.It Cm zz
go to 50% of the page
.It Cm [0-9]*gu
go
.Cm arg
levels up. If
.Cm arg
is missing, 1 is assumed. Going a
level up means going to a URI obtained from the current one by removing
the last slash ('/') character and everything that follows it
.It Cm gU
go to the root level, i.e. going up as many levels as possible.
.It Cm gh
open the home page in the current tab
.It Cm m[a-zA-Z0-9]
set a mark denoted by
.Cm arg
at the current page position. These marks behave like those in vi or
less.
.It Cm ['][a-zA-Z0-9]
go to the position where mark
.Cm arg
was set
.It Cm M[a-zA-Z0-9]
set the current uri as quickmark
.Cm arg
.It Cm go[a-zA-Z0-9]
open the uri marked as quickmark
.Cm arg
in the current tab
.It Cm gn[a-zA-Z0-9]
open the uri marked as quickmark
.Cm arg
in a new tab
.It Cm [0-9]+t
activate tab number
.It Cm g0
go to first tab
.It Cm g$
go to last tab
.It Cm [0-9]*gt
go to the
.Cm arg
next tab
.It Cm [0-9]*gT
go to the
.Cm arg
previous tab
.Cm arg
.It Cm ZZ
quit
.Nm
.It Cm ZR
restart
.Nm
.It Cm zi
zoom in by 4%
.It Cm zo
zoom out by 4%
.It Cm z0
set zoom level to 100%
.It Cm [0-9]+Z
set zoom level to
.Cm arg
%
.El
.Sh QUICKMARKS
Quickmarks are like bookmarks, except they are refered to by a single
character (a letter or a digit), instead of a longer name. See the
.Cm M[a-zA-Z0-9] ,
.Cm go[a-zA-Z0-9]
and
.Cm gn[a-zA-Z0-9]
buffer commands for usage. Quickmarks are stored in
.Pa ~/.xxxterm/quickmarks
and are saved automatically after each
.Cm M[a-zA-Z0-9]
buffer command.
.Sh ABOUT SCREENS
The about screens are internally generated web pages by
.Nm
for user interaction.
These are entered in the address bar and the format is
.Cm about:screen
where screen is the desired screen to display.
For example about:favorites.
Any about screen can be used as the home page as specified by
.Cm home
in the configuration file.
.Pp
.Bl -tag -width "downloadsXXX" -offset indent -compact
.It Cm about
show the about screen
.It Cm blank
show a blank screen
.It Cm cookiewl
show the cookie whitelist screen
.It Cm cookiejar
show the cookiejar screen
.It Cm downloads
show the downloads screen
.It Cm favorites
show the favorites screen
.It Cm help
show the help web page
.It Cm history
show the history screen
.It Cm jswl
show the Java Script whitelist screen
.It Cm set
show the settings screen
.It Cm stats
show the statistics screen
.El
.Sh WHITELISTS
This section describes advanced usage settings.
Most users should use
.Cm browser_mode
instead to setup
.Nm
and skip over this section.
.Pp
.Nm
has a number of whitelists to control blocking cookies and Java Script
execution for FQDNs or domains.
When properly enabled these whitelists require either the FQDN or top level
domain to exist in the whitelists in order to allow cookies to be stored or
Java Script to execute.
Both Java Script and cookies have two whitelists associated with them.
The whitelists are called session and persistent.
Items in the session whitelists are only allowed for the lifetime of the
.Nm
instance.
Items in the persistent whitelists are stored on disk and are restored
upon restarting.
.Pp
Setting up the whitelists is a little tricky due to intricacies of WebKit.
In fact the semantics are different for cookies and Java Script.
.Pp
Cookie whitelist requires the following configuration to be set:
.Pp
.Bl -tag -width "enable_cookie_whitelistXXX" -offset indent -compact
.It Cm cookies_enabled
This is a WebKit setting and must be set to
.Pa 1
(ENABLED)
in order to be able to use a
cookie whitelist.
.It Cm enable_cookie_whitelist
This needs to be set to
.Pa 1
to enable the cookie whitelist functionality.
.It Cm cookie_wl
These entries in the configuration file are the actual domains names in the
cookie whitelist.
.El
.Pp
Java Script whitelist requires the following configuration to be set:
.Pp
.Bl -tag -width "enable_js_whitelistXXX" -offset indent -compact
.It Cm enable_scripts
This is a WebKit setting and must be set to
.Pa 0
(DISABLED)
in order to be able to use a
Java Script whitelist.
.It Cm enable_js_whitelist
This needs to be set to
.Pa 1
to enable the Java Script whitelist functionality.
.It Cm js_wl
These entries in the configuration file are the actual domains names in the
Java Script whitelist.
.El
.Pp
Plugin whitelist requires the following configuration to be set:
.Pp
.Bl -tag -width "enable_plugin_whitelistXXX" -offset indent -compact
.It Cm enable_plugins
This is a WebKit setting and must be set to
.Pa 1
(ENABLED)
in order to be able to use a
plugin whitelist.
.It Cm enable_plugin_whitelist
This needs to be set to
.Pa 1
to enable the plugin whitelist functionality.
.It Cm pl_wl
These entries in the configuration file are the actual domains names in the
plugin whitelist.
.El
.Pp
See the
.Pa FILES
section for additional configuration file entries and details
that alter runtime behavior.
.Sh FILES
.Bl -tag -width "/etc/xxxterm.confXXX" -compact
.It Pa ~/.xxxterm.conf
.Nm
user specific settings.
.It Pa ~/.xxxterm
.Nm
scratch directory.
.El
.Pp
.Nm
tries to open the user specific file,
.Pa ~/.xxxterm.conf .
If that file is unavailable,
it then uses built-in defaults.
.Pp
The format of the file is \*(Ltkeyword\*(Gt = \*(Ltsetting\*(Gt.
For example:
.Pp
.Dl http_proxy = http://127.0.0.1:8080
.Pp
Enabling or disabling an option is done by using 1 or 0 respectively.
.Pp
The file supports the following keywords:
.Pp
.Bl -tag -width "enable_cookie_whitelistXXX" -offset indent -compact
.It Cm alias
Defines an alias for a given URL, so that the URL is loaded when the alias is
entered in the address bar.
If the aliased URL includes a %s format specifier, then any argument given after
the alias on the address bar is substituted.
For example, if g,http://www.google.com/search?q=%s is defined as an alias,
then the URL http://www.google.com/search?q=foo is loaded when navigating to
"g foo".
.It Cm allow_volatile_cookies
If set cookies are stored in the session cache but will be discarded once
.Nm
exits.
Unfortunately enabling this does allow for some limited tracking on the web.
.It Cm append_next
When set a new tab is appended after the current tab instead of being appended
as the last tab.
.It Cm auto_load_images
If disabled, images will not be loaded automatically.
.It Cm autofocus_onload
When set a tab that is loaded will attempt to autofocus the default input
entry.
This is only done for tabs that are currently visible.
.It Cm browser_mode
The
.Nm
browser has 3 default operating modes:
.Pa normal
(the default),
.Pa whitelist
and
.Pa kiosk .
In the
.Pa normal
mode the browser allows all cookies, plugins and Java Script as any other
browser would.
This means that all cookies are saved to persistent storage and that all
Java Script and plugins run.
.Pp
On the other hand, using the
.Pa whitelist
mode enables whitelists.
This requires the user to add all the required
.Pa cookie_wl ,
.Pa js_wl
and
.Pa pl_wl
items.
If a domain does not appear in the whitelists
.Nm
disallows cookies, Java Script and plugin execution.
.Pp
In
.Pa kiosk
mode the browse works just like
.Pa normal
mode however the toolbar only has the backward, forward and home button.
.Pp
This setting must be the first entry in
.Pa ~/.xxxterm.conf
because it sets advanced settings that can be overridden later in the file.
See the default config file for more details.
.It Cm cmd_font
Set the command prompt font.
E.g.
.Pa cmd_font = monospace normal 9 .
.It Cm color_visited_uris
When enabled (the default)
.Nm
will color visited links. This is done while the web page loads using
JavaScript, rather than WebKit's (broken, see bug #51747) built-in
facility for coloring visited links. The JavaScript approach is
(probably) slower and is not consistent across tabs (unless the tabs are
reloaded), but has the advantage of not leaking history data to web
pages (see http://wtikay.com/docs/details.html).
.It Cm cookie_policy
This field delineates the cookie policy.
Possible values are: no3rdparty, reject 3rd party cookies.
accept, accept all cookies.
reject, reject all cookies.
.It Cm cookie_wl
This is a cookie whitelist item.
Use multiple times to add multiple entries.
Valid entries are for example *.moo.com and the equivalent .moo.com.
A fully qualified host is also valid and is for example www.moo.com.
.It Cm cookies_enabled
Enable cookies.
.It Cm ctrl_click_focus
Give focus in newly created tab instead of opening it in the background.
.It Cm default_script
Path to the script used as the default value for the run_script
command.
.It Cm default_zoom_level
Set the default browsing zoom level.
.It Cm download_dir
Locations where files are downloaded to.
This directory must exist and
.Nm
validates that during startup.
.It Cm download_mode
Controls how downloads are handled.
Possible values are:
.Bd -literal -offset indent
start - automatically start download.
ask   - ask user for confirmation.
add   - add to downloadmanager, but
        do not start.
.Ed
The default is "start".
.It Cm enable_autoscroll
When enabled clicking MB3 will spawn the autoscroll ball, scrolling can
then proceed by dragging the mouse away from the ball.
.It Cm enable_cookie_whitelist
When enabled all cookies must be in the whitelist or they are rejected.
Additionally whitelisted cookies also enable HTML5 local storage for the
domain.
.It Cm enable_favicon_entry
When enabled (the default)
.Nm
displays the favicon of the web page at the URI entry. This setting
affects both
.Cm normal
and
.Cm compact
tabs.
.It Cm enable_favicon_tabs
When enabled (disabled by default)
.Nm
displays favicons at each tab. This setting only affects
.Cm compact
tabs.
.It Cm enable_js_whitelist
When enabled all domains must be in the js whitelist in order to run Java
Script.
NOTE: Make sure
.Cm enable_scripts
is set to 0.
.It Cm enable_plugin_whitelist
When enabled all domains must be in the plugin whitelist in order to run
plugins.
NOTE: Make sure
.Cm enable_plugins
is set to 0.
.It Cm enable_plugins
Enable external plugins such as Flash and Java.
.It Cm enable_scripts
Enable Java Script.
.It Cm enable_socket
When enabled the first instance of
.Nm
will create a socket in the
.Pa ~/.xxxterm
directory.
Using the -n url option on subsequent
.Nm
invocations will cause the specified URL to be loaded in a new tab.
Only a user with identical UID and GID can use this option.
.It Cm enable_localstorage
Enable html5 Local Storage.
.It Cm enable_spell_checking
Enables spell checking. Preferred languages can be set using
.Cm spell_check_languages
option.
.It Cm encoding
Set the default encoding.
E.g.
.Pa encoding = ISO-8859-1 .
.It Cm external_editor
Set which editor to use for external editing.
the string <file> will be replaced by the current filename.
E.g.
.Pa external_editor = gvim -f <file>
Note!
.Cm xxxterm
relies on the editor
.Pa not forking
into the background.
.It Cm fancy_bar
Enables a backward, forward, and stop button to the toolbar.
Additionally if
.Cm search_string
is set it'll enable an entry box for searches.
.It Cm guess_search
When enabled
.Nm
will try to guess if the string you entered, in the URI entry widget or
the command widget, is term you want to search for using search_string
(see above).
If the string does not contain a dot nor a slash, is not a
path to a local file and does not resolves to an IP then it is assumed
to be a search term.
.It Cm gui_mode
To simplify configuring
.Nm
allows you pick between two GUI modes:
.Pa classic
(the default) and
.Pa minimal .
In the
.Pa classic
mode the GUI looks similar to that of most mainstream browsers. While in
.Pa minimal
mode the GUI looks more vi-like. One can get a GUI between the two by
tweaking the low-level GUI settings found under the advanced GUI setting
section in the configuration file.
.It Cm history_autosave
When enabled
.Nm
will save all command and search history.
Upon restarting
.Nm
the saved command and search history will be restored.
.It Cm home
Homepage in URL format.
.It Cm http_proxy
Proxy server in URL format.
.Nm
overrides
.Cm http_proxy
if it is specified as an environment variable.
It must be noted that on older webkit versions one MUST use an IP address and
not a FQDN.
This works as expected with webkit 1.4.2.
.Pp
If one desires to use a socks proxy then an intermediary tool must be used.
It has been reported that tsocks works with
.Nm .
.It Cm icon_size
Permits icon sizes to be changed if
.Cm fancy_bar
is enabled.
Size 1 is small; 2 is normal; 3 through 6 are progressively larger.
.It Cm js_wl
This is a Java Script whitelist item.
See
.Cm cookie_wl
for semantics and more details.
.It Cm max_connections
The maximum number of connections that
.Nm
can open at once.
.It Cm max_host_connections
The maximum number of connections that
.Nm
can open at once to a given host.
.It Cm mime_type
Sets an action for a specific or default MIME type.
For example, to download and view a pdf using kpdf set
.Pa mime_type = application/pdf,kpdf .
To set a default value use *, for example,
.Pa mime_type = video/*,mplayer .
Note that the action is only passed the URL and not all applications are
capable of dealing with a URL and therefore one might have to create a wrapper
script to download the content first.  Alternatively one can add the
.Pa @
in front of the MIME type to indicate "download first".
For example,
.Pa mime_type = @application/pdf,xpdf .
When
.Pa @
is use the file will be downloaded to the
.Pa download_dir
before the MIME handler is called.
.It Cm oops_font
Set the font used to display error messages.
E.g.
.Pa oops_font = monospace normal 9 .
.It Cm pl_wl
This is a plugin whitelist item.
See
.Cm cookie_wl
for semantics and more details.
.It Cm read_only_cookies
Mark cookies file read-only and discard all cookies once the session is
terminated.
.It Cm refresh_interval
Refresh interval while in the download manager.
The default is 10.
.It Cm referer
Control how 'Referer' is handled in http-requests.
.Bd -literal -offset indent
always      - always send referer
never       - never send referer
same-domain - only send referer if it's
              for the same domain
.Ed
Any other value that is also a valid URL will use this
custom value as referer. (E.g. you could set it to http://no-referer.com)
The default value is "always"
.It Cm resource_dir
Directory that contains various
.Nm
resources such as icons.
This is OS-specific and should be handled by the porter.
.It Cm save_global_history
If set the global history will be saved to
.Pa ~/.xxxterm/history
when quitting
and restored at startup.
See the
.Sx KEY BINDINGS
section above for how the global history is accessed.
Global history is not saved to disk by default.
.It Cm save_rejected_cookies
Saves rejected cookies in cookie format in {work_dir}/rejected.txt.
All cookies are saved and unlike a cookie jar they are never replaced.
Make sure there is enough disk space to enable this feature.
.It Cm search_string
Default search engine string.
See the
.Pa xxxterm.conf
file for details.
.It Cm session_autosave
Enable session auto-saving when changing state (e.g. adding or removing a tab).
The session name is what is currently in use and is described in the
.Cm session save
and
.Cm session open
commands.
.It Cm session_timeout
This value is the time that is added in seconds to a session cookie.
.It Cm show_tabs
Enable or disable showing tabs.
.It Cm show_url
Enable or disable showing the url and toolbar.
.It Cm show_statusbar
Enable or disable showing the status bar.
.It Cm single_instance
If set and
.Cm enable_socket
is enabled only one
.Nm
will be permitted to run.
If there is a URL specified it will be opened in a new tab in the already
running
.Nm
session.
.It Cm spell_check_languages
The languages to be used for spell checking, separated by commas. For example,
en_US.
.It Cm ssl_ca_file
If set to a valid PEM file
all server certificates will be validated against it.
The URL bar will be colored green (or blue when saved ) when the certificate is
trusted and yellow when untrusted.
.Pp
If
.Cm ssl_ca_file
is not set then the URL bar will color all HTTPS connections red.
.Pp
WebKit only supports a single PEM file.
Many OS' or distributions have many PEM files.
One can simply concatenate all separate files into one large one.
E.g.
.Cm for i in `ls`; do cat $i >> cert.pem; done
and use the resulting cert.pem file as the input to
.Cm ssl_ca_file .
It is advisable to periodically recreate the cert.pem file.
.It Cm ssl_strict_certs
If this value is set connections to untrusted sites will be aborted.
This value is only used if
.Cm ssl_ca_file
is set.
.It Cm statusbar_elems
Define the components of the status bar. The possible components are:
.Bd -literal -offset indent
| - separator
P - page progress percent
B - buffer command
Z - page zoom level
.Ed
The default is "BP".
These components show nothing if there is nothing worth showing, like
zoom amount 100%.
.It Cm statusbar_font
Set the status bar font.
E.g.
.Pa statusbar_font = monospace normal 9 .
.It Cm tab_style
Set the tab style to either
.Cm normal
- the default gtk notebook tabs, or
.Cm compact
for an alternative.
You can switch the tab style with the
.Pa tabnextstyle
command.
.It Cm tabbar_font
Set the compact tab bar font.
E.g.
.Pa tabbar_font = monospace normal 9 .
.It Cm url_regex
This is the regular expression that is used to match what constitutes a valid
URL when using
.Pa guess_search .
.It Cm user_agent
Set to override the default
.Nm
user-agent string. May be specified several times for switching between
user-agents.
.It Cm window_height
Set the default height of the browser window.
.It Cm window_width
Set the default width of the browser window.
.It Cm window_maximize
Maximize the browser window at startup.
.It Cm work_dir
Set the work directory where all
.Nm
scratch files are stored.
Default is
.Cm ~/.xxxterm .
.It Cm xterm_workaround
When enabled
.Nm
will look additionally at CUT_BUFFER0 if PRIMARY clipboard is empty.
Additionally when the PRIMARY clipboard is cleared it will copy CUT_BUFFER0
into the PRIMARY clipboard.
Default is 0.
.El
.Sh HISTORY
.Nm
was inspired by vimprobable2 and the bloat in other
.Ux
web browsers.
.Sh AUTHORS
.An -nosplit
.Nm
was written by
.An Marco Peereboom Aq marco@peereboom.us ,
.An Stevan Andjelkovic Aq stevan@student.chalmers.se ,
.An Edd Barrett Aq vext01@gmail.com ,
.An Todd T. Fries Aq todd@fries.net ,
.An Raphael Graf Aq r@undefined.ch ,
and
.An Michal Mazurek Aq akfaew@jasminek.net .
